@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SNDTRCK.Models
@using SNDTRCK.Models.User

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject UserManager<IdentityUser> _userManager


@model List<AspNetUser>

@{
	Layout = "../_Shared/_Layout";
	var registerModel = ViewBag.RegisterModel as SNDTRCK.Areas.Identity.Pages.Account.RegisterModel;

	var currentUser = await _userManager.GetUserAsync(User);
}
<!-- TODO: Implement a user management system -->

<main class="max-width-80 d-flex flex-column text-center align-items-center">
	<h2>Manage Users</h2>
	<h3>NOTICE: NOT IMPLEMENTED YET</h3>
	<table class="table table-hover manage-admin">
		<thead>
		<tr>
			<th scope="col">Username (email)</th>
			<th scope="col">Phone Nr</th>
			<th scope="col">Actions</th>
		</tr>
		</thead>
		<tbody>

		@foreach (var user in Model)
		{
			<tr>
				<th scope="col">@user.Email</th>
				<th scope="col">@user.PhoneNumber</th>


				<th scope="col">
					<button type="button" class="btn btn-success">Edit</button>

					<form asp-area="Admin" asp-controller="User" asp-action="DeleteUser" method="post" class="inline-button delete-form">
						<input type="hidden" name="userName" value="@user.UserName">
						<input type="hidden" name="currentUser" value="@currentUser">
						<button type="button" class="btn btn-danger" onclick="confirmDelete('@user.UserName')">Delete User</button>
					</form>
				</th>
			</tr>
		}

		</tbody>
	</table>
</main>

<script>
	function confirmDelete(userName) {
		if (confirm("Are you sure you want to delete this user?")) {
			// Find the form associated with the delete button
			var form = document.querySelector('.delete-form input[name="userName"][value="' + userName + '"]');
			form.parentNode.submit();
		}
	}
</script>